set_names(c("SampleID", "GCA_016616885.1_Sylph"))
sylph_strepto_top <- sylph_strepto %>%
dplyr::select(SampleID, GCA_012922115.1) %>%
set_names(c("SampleID", "GCA_012922115.1_Sylph"))
sylph_udaeo_top <- sylph_udaeo %>%
dplyr::select(SampleID, GCA_013372845.1) %>%
set_names(c("SampleID", "GCA_013372845.1_Sylph"))
sylph_myco_top <- sylph_myco %>%
dplyr::select(SampleID, GCA_019668465.1) %>%
set_names(c("SampleID", "GCA_019668465.1_Sylph"))
compare_cm_sylph <- cm_top4_table %>%
left_join(., sylph_brady_top, by = "SampleID") %>%
left_join(., sylph_strepto_top, by = "SampleID") %>%
left_join(., sylph_udaeo_top, by = "SampleID") %>%
left_join(., sylph_myco_top, by = "SampleID") %>%
left_join(., meta_AI, by = "SampleID") %>%
arrange(AI) %>%
dplyr::select(SampleID,
GCA_013372845.1_coverM, GCA_013372845.1_Sylph,
GCA_019668465.1_coverM, GCA_019668465.1_Sylph,
GCA_016616885.1_coverM, GCA_016616885.1_Sylph,
GCA_012922115.1_coverM, GCA_012922115.1_Sylph,
AI)
# Streptomyces
sylph_strepto <- sylph_profile %>%
filter(Genus == "Streptomyces")
no_strepto <- meta %>%
filter(sampleID %notin% sylph_strepto$SampleID) %>%
mutate(SampleID = as.character(sampleID)) %>%
mutate(Accession = NA,
Eff_cov = 0) %>%
dplyr::select(SampleID, Accession, Eff_cov)
sylph_strepto <- sylph_profile %>%
filter(Genus == "Streptomyces") %>%
dplyr::select(SampleID, Accession, Eff_cov) %>%
rbind(., no_strepto) %>%
pivot_wider(names_from = Accession, values_from = Eff_cov) %>%
replace(is.na(.), 0) %>%
dplyr::select(-`NA`) %>%
left_join(., meta_AI, by = "SampleID") %>%
arrange(AI)
sylph_strepto_mat <- sylph_strepto %>%
dplyr::select(-AI) %>%
column_to_rownames(var = "SampleID") %>%
t()
sylph_strepto_ai <- sylph_strepto %>%
dplyr::select(SampleID, AI)
ann_cols <- data.frame(row.names = colnames(sylph_strepto_mat),
AI = sylph_strepto_ai$AI)
# Udaeobacter
sylph_udaeo <- sylph_profile %>%
filter(Genus == "Udaeobacter")
no_udaeo <- meta %>%
filter(sampleID %notin% sylph_udaeo$SampleID) %>%
mutate(SampleID = as.character(sampleID)) %>%
mutate(Accession = NA,
Eff_cov = 0) %>%
dplyr::select(SampleID, Accession, Eff_cov)
sylph_udaeo <- sylph_profile %>%
filter(Genus == "Udaeobacter") %>%
dplyr::select(SampleID, Accession, Eff_cov) %>%
rbind(., no_udaeo) %>%
pivot_wider(names_from = Accession, values_from = Eff_cov) %>%
replace(is.na(.), 0) %>%
dplyr::select(-`NA`) %>%
left_join(., meta_AI, by = "SampleID") %>%
arrange(AI)
sylph_udaeo_mat <- sylph_udaeo %>%
dplyr::select(-AI) %>%
column_to_rownames(var = "SampleID") %>%
t()
sylph_udaeo_ai <- sylph_udaeo %>%
dplyr::select(SampleID, AI)
ann_cols <- data.frame(row.names = colnames(sylph_udaeo_mat),
AI = sylph_udaeo_ai$AI)
# Mycobacterium
sylph_myco <- sylph_profile %>%
filter(Genus == "Mycobacterium")
no_myco <- meta %>%
filter(sampleID %notin% sylph_myco$SampleID) %>%
mutate(SampleID = as.character(sampleID)) %>%
mutate(Accession = NA,
Eff_cov = 0) %>%
dplyr::select(SampleID, Accession, Eff_cov)
sylph_myco <- sylph_profile %>%
filter(Genus == "Mycobacterium") %>%
dplyr::select(SampleID, Accession, Eff_cov) %>%
rbind(., no_myco) %>%
pivot_wider(names_from = Accession, values_from = Eff_cov) %>%
replace(is.na(.), 0) %>%
dplyr::select(-`NA`) %>%
left_join(., meta_AI, by = "SampleID") %>%
arrange(AI)
sylph_myco_mat <- sylph_myco %>%
dplyr::select(-AI) %>%
column_to_rownames(var = "SampleID") %>%
t()
sylph_myco_ai <- sylph_myco %>%
dplyr::select(SampleID, AI)
ann_cols <- data.frame(row.names = colnames(sylph_myco_mat),
AI = sylph_myco_ai$AI)
list.files("data/coverm_output/")
cm_top4_dfs <- list()
for (i in 1:length(list.files("data/coverm_output/"))) {
filename <- list.files("data/coverm_output/")[i]
cm_top4_dfs[[i]] <- read.delim(paste("data/coverm_output/", filename, sep = ""))
}
cm_top4 <- cm_top4_dfs[[1]]
for (i in 2:length(list.files("data/coverm_output/"))) {
cm_top4 <- cbind(cm_top4, cm_top4_dfs[[i]][, 2, drop = FALSE])
}
cm_n_Samples <- cm_top4 %>%
column_to_rownames(var = "Genome") %>%
mutate(n_Samples_coverM = rowSums(. != 0)) %>%
rownames_to_column(var = "Genome") %>%
dplyr::select(Genome, n_Samples_coverM)
cm_top4_table <- cm_top4 %>%
mutate(Genome = substr(Genome, start = 1, stop = 15)) %>%
column_to_rownames(var = "Genome") %>%
t() %>%
as.data.frame() %>%
rownames_to_column(var = "SampleID") %>%
mutate(SampleID = gsub("X", "", SampleID)) %>%
separate(SampleID, into = c("SampleID", "Junk1", "Junk2"), sep = "_") %>%
dplyr::select(-Junk1, -Junk2) %>%
set_names(paste(names(.), "_coverM", sep = "")) %>%
rename(SampleID = SampleID_coverM)
sylph_brady_top <- sylph_brady %>%
dplyr::select(SampleID, GCA_016616885.1) %>%
set_names(c("SampleID", "GCA_016616885.1_Sylph"))
sylph_strepto_top <- sylph_strepto %>%
dplyr::select(SampleID, GCA_012922115.1) %>%
set_names(c("SampleID", "GCA_012922115.1_Sylph"))
sylph_udaeo_top <- sylph_udaeo %>%
dplyr::select(SampleID, GCA_013372845.1) %>%
set_names(c("SampleID", "GCA_013372845.1_Sylph"))
sylph_myco_top <- sylph_myco %>%
dplyr::select(SampleID, GCA_019668465.1) %>%
set_names(c("SampleID", "GCA_019668465.1_Sylph"))
compare_cm_sylph <- cm_top4_table %>%
left_join(., sylph_brady_top, by = "SampleID") %>%
left_join(., sylph_strepto_top, by = "SampleID") %>%
left_join(., sylph_udaeo_top, by = "SampleID") %>%
left_join(., sylph_myco_top, by = "SampleID") %>%
left_join(., meta_AI, by = "SampleID") %>%
arrange(AI) %>%
dplyr::select(SampleID,
GCA_013372845.1_coverM, GCA_013372845.1_Sylph,
GCA_019668465.1_coverM, GCA_019668465.1_Sylph,
GCA_016616885.1_coverM, GCA_016616885.1_Sylph,
GCA_012922115.1_coverM, GCA_012922115.1_Sylph,
AI)
compare_cm_sylph_mat <- compare_cm_sylph %>%
dplyr::select(-AI) %>%
column_to_rownames(var = "SampleID") %>%
t()
compare_cm_sylph_ai <- compare_cm_sylph %>%
dplyr::select(SampleID, AI)
ann_cols <- data.frame(row.names = colnames(compare_cm_sylph_mat),
AI = compare_cm_sylph_ai$AI)
ann_rows <- data.frame(row.names = rownames(compare_cm_sylph_mat),
Genus = c("Udaeobacter", "Udaeobacter",
"Mycobacterium", "Mycobacterium",
"Bradyrhizobium", "Bradyrhizobium",
"Streptomyces", "Streptomyces")) %>%
mutate(Genus = factor(Genus, levels = c("Udaeobacter", "Mycobacterium",
"Bradyrhizobium", "Streptomyces")))
# Need to get list of samples to run StrainFinder
# Run on samples with the highest coverage
# Set mindepth parameter to half
cm_top4_table
hist(cm_top4_table$GCA_013372845.1_coverM)
hist(cm_top4_table$GCA_019668465.1_coverM)
hist(cm_top4_table$GCA_016616885.1_coverM)
hist(cm_top4_table$GCA_012922115.1_coverM)
# Clearly, start with GCA_016616885.1 (Bradyrhizobium)
brady_cov4 <- cm_top4_table %>%
filter(GCA_016616885.1_coverM > 4) %>%
left_join(meta_AI, by = "SampleID") %>%
mutate(Half = round(GCA_016616885.1_coverM/2, digits = 0),
UnderTwice = round((GCA_016616885.1_coverM*2) - 1, digits = 0)) %>%
rename(MeanCoverage = GCA_016616885.1_coverM) %>%
dplyr::select(SampleID, AI, MeanCoverage, Half, UnderTwice)
# Coverage histogram
# Note: Sample 401590 had no reads of any of the top 4 mapped so deleted file
# This is weird because for mean coverage and rel abund it did...
# Now only 103 samples
# Do for Brady first to keep file sizes down
list.files("data/coverm_output_ch/")
cm_top4_ch_dfs <- list()
for (i in 1:length(list.files("data/coverm_output_ch/"))) {
filename <- list.files("data/coverm_output_ch/")[i]
cm_top4_ch_dfs[[i]] <- read.delim(paste("data/coverm_output_ch/", filename, sep = ""))
}
View(cm_top4_ch_dfs[[1]])
View(cm_top4_ch_dfs[[2]])
table(cm_top4_ch_dfs[[2]]$Genome)
# Coverage histogram
# Note: Sample 401590 had no reads of any of the top 4 mapped so deleted file
# This is weird because for mean coverage and rel abund it did...
# Now only 103 samples
# Do for Brady first to keep file sizes down
list.files("data/coverm_output_ch/")
cm_top4_ch_dfs <- list()
for (i in 1:length(list.files("data/coverm_output_ch/"))) {
filename <- list.files("data/coverm_output_ch/")[i]
cm_top4_ch_dfs[[i]] <- read.delim(paste("data/coverm_output_ch/", filename, sep = "")) %>%
filter(Genome == "GCA_016616885.1_ASM1661688v1_genomic")
}
# Print number of rows by sample
brady_nrows <- as.data.frame(Matrix(data = NA,
nrow = length(list.files("data/coverm_output_ch/")),
ncol = 2)) %>%
set_names(c("Sample", "BradyCoverages"))
length(list.files("data/coverm_output_ch/"))
# Print number of rows by sample
brady_nrows <- as.data.frame(Matrix(data = NA,
nrow = length(list.files("data/coverm_output_ch/")),
ncol = 2)) %>%
set_names(c("Sample", "BradyCoverages"))
# Print number of rows by sample
brady_nrows <- as.data.frame(matrix(data = NA,
nrow = length(list.files("data/coverm_output_ch/")),
ncol = 2)) %>%
set_names(c("Sample", "BradyCoverages"))
substr(list.files("data/coverm_output_ch/")[1],
start = 1,
stop = nchar(list.files("data/coverm_output_ch/")[i]) - 5)
# Brady
list.files("data/coverm_output_ch/")
substr(list.files("data/coverm_output_ch/")[1],
start = 1,
stop = nchar(list.files("data/coverm_output_ch/")[i]) - 4)
substr(list.files("data/coverm_output_ch/")[1],
start = 1,
stop = nchar(list.files("data/coverm_output_ch/")[i]) - 3)
substr(list.files("data/coverm_output_ch/")[1],
start = 1,
stop = nchar(list.files("data/coverm_output_ch/")[i]))
substr(list.files("data/coverm_output_ch/")[1],
start = 1,
stop = nchar(list.files("data/coverm_output_ch/")[i]-1))
substr(list.files("data/coverm_output_ch/")[1],
start = 1,
stop = nchar(list.files("data/coverm_output_ch/")[i])-1)
# Print number of rows by sample
brady_nrows <- as.data.frame(matrix(data = NA,
nrow = length(list.files("data/coverm_output_ch/")),
ncol = 2)) %>%
set_names(c("Sample", "BradyCoverages"))
for (i in 1:length(list.files("data/coverm_output_ch/"))) {
brady_nrows$Sample <- substr(list.files("data/coverm_output_ch/")[1],
start = 1,
stop = nchar(list.files("data/coverm_output_ch/")[i])-1)
brady_nrows$BradyCoverages <- nrow(cm_top4_ch_dfs[[i]])
}
View(brady_nrows)
# Print number of rows by sample
brady_nrows <- as.data.frame(matrix(data = NA,
nrow = length(list.files("data/coverm_output_ch/")),
ncol = 2)) %>%
set_names(c("Sample", "BradyCoverages"))
for (i in 1:length(list.files("data/coverm_output_ch/"))) {
brady_nrows$Sample <- substr(list.files("data/coverm_output_ch/")[i],
start = 1,
stop = nchar(list.files("data/coverm_output_ch/")[i])-1)
brady_nrows$BradyCoverages <- nrow(cm_top4_ch_dfs[[i]])
}
View(brady_nrows)
# Print number of rows by sample
brady_nrows <- as.data.frame(matrix(data = NA,
nrow = length(list.files("data/coverm_output_ch/")),
ncol = 2)) %>%
set_names(c("Sample", "BradyCoverages"))
for (i in 1:length(list.files("data/coverm_output_ch/"))) {
brady_nrows$Sample[i] <- list.files("data/coverm_output_ch/")[i]
brady_nrows$BradyCoverages[i] <- nrow(cm_top4_ch_dfs[[i]])
}
View(brady_nrows)
View(brady_nrows)
View(brady_cov4)
cm_top4_ch <- cm_top4_ch_dfs[[1]]
for (i in 2:length(list.files("data/coverm_output_ch/"))) {
cm_top4_ch <- rbind(cm_top4_ch, cm_top4_ch_dfs[[i]])
}
View(cm_top4_ch)
plot(cm_top4_ch$Coverage, cm_top4_ch$Bases)
View(cm_top4_ch)
View(brady_cov4)
cm_top4_ch <- cm_top4_ch %>%
separate(Sample, into = c("SampleID", "Junk1", "Junk2"), sep = "_") %>%
dplyr::select(-Junk1, -Junk2) %>%
filter(SampleID %in% brady_cov4)
cm_top4_ch <- cm_top4_ch_dfs[[1]]
for (i in 2:length(list.files("data/coverm_output_ch/"))) {
cm_top4_ch <- rbind(cm_top4_ch, cm_top4_ch_dfs[[i]])
}
cm_top4_ch <- cm_top4_ch %>%
separate(Sample, into = c("SampleID", "Junk1", "Junk2"), sep = "_") %>%
dplyr::select(-Junk1, -Junk2) %>%
filter(SampleID %in% brady_cov4$SampleID)
View(cm_top4_ch)
length(unique(cm_top4_ch$SampleID))
cm_brady_ch <= cm_top4_ch
cm_brady_ch <- cm_top4_ch
View(cm_brady_ch)
class(cm_brady_ch$SampleID)
cm_brady_ch_12816 <- cm_brady_ch %>%
filter(SampleID == "12816")
View(cm_brady_ch_12816)
plot(cm_brady_ch_12816$Coverage, cm_brady_ch_12816$Bases)
cm_brady_ch_12816 <- cm_brady_ch %>%
filter(SampleID == "12816") %>%
filter(Coverage > 0)
plot(cm_brady_ch_12816$Coverage, cm_brady_ch_12816$Bases)
cm_brady_ch_12816 <- cm_brady_ch %>%
filter(SampleID == "12816") %>%
filter(Coverage > 20)
plot(cm_brady_ch_12816$Coverage, cm_brady_ch_12816$Bases)
cm_brady_ch_12816 <- cm_brady_ch %>%
filter(SampleID == "12816") %>%
filter(Coverage > 50)
plot(cm_brady_ch_12816$Coverage, cm_brady_ch_12816$Bases)
cm_brady_ch_12816 <- cm_brady_ch %>%
filter(SampleID == "12816") %>%
filter(Coverage > 100)
plot(cm_brady_ch_12816$Coverage, cm_brady_ch_12816$Bases)
cm_brady_ch_12816 <- cm_brady_ch %>%
filter(SampleID == "12816") %>%
filter(Coverage > 200)
plot(cm_brady_ch_12816$Coverage, cm_brady_ch_12816$Bases)
View(cm_brady_ch_12816)
cm_brady_ch_12816 <- cm_brady_ch %>%
filter(SampleID == "12816")
View(cm_brady_ch_12816)
sum(cm_brady_ch_12816$Bases)
View(cm_brady_ch)
cm_brady_ch_138538 <- cm_brady_ch %>%
filter(SampleID == "138538")
plot(cm_brady_ch_138538$Coverage, cm_brady_ch_138538$Bases)
sum(cm_brady_ch_138538$Bases)
plot(cm_brady_ch_138538$Coverage, log10(cm_brady_ch_138538$Bases))
log10(1)
log10(0)
plot(cm_brady_ch_138538$Coverage, log10(cm_brady_ch_138538$Bases+1))
log10(10)
plot(cm_brady_ch_138538$Bases, cm_brady_ch_138538$Coverage)
View(cm_brady_ch_138538)
View(cm_brady_ch_138538)
# Check the max coverages per sample
cm_brady_ch_max <- cm_brady_ch %>%
group_by(SampleID) %>%
summarise(MaxCov = max(Coverage))
View(cm_brady_ch_max)
# Check the number of bases with 0 coverage
# For example, see how many samples have < 50% with 0
cm_brady_ch_zero <- cm_brady_ch %>%
filter(Coverage == 0)
View(cm_brady_ch_zero)
# Check the number of bases with 0 coverage
# For example, see how many samples have < 50% with 0
cm_brady_ch_zero <- cm_brady_ch %>%
filter(Coverage == 0) %>%
mutate(PercGenome = round(Bases/8084945*100, digits = 2))
View(cm_brady_ch_zero)
# Check the max coverages per sample
cm_brady_ch_max <- cm_brady_ch %>%
group_by(SampleID) %>%
summarise(MaxCov = max(Coverage)) %>%
mutate(HalfMax - MaxCov/2)
# Check the max coverages per sample
cm_brady_ch_max <- cm_brady_ch %>%
group_by(SampleID) %>%
summarise(MaxCov = max(Coverage)) %>%
mutate(HalfMax = MaxCov/2)
View(cm_brady_ch_max)
# How about setting the max at the first value that has only 10 or less bases
cm_brady_ch_cut10 <- cm_brady_ch %>%
group_by(SampleID) %>%
filter(Bases < 10) %>%
slice_head(n = 1)
View(cm_brady_ch_cut10)
View(cm_brady_ch_cut10)
View(brady_cov4)
View(cm_brady_ch_zero)
# Check the number of bases with 0 coverage
# For example, see how many samples have < 50% with 0
# 34 samples have > 50% genome with at least coverage of 1
cm_brady_ch_zero <- cm_brady_ch %>%
filter(Coverage == 0) %>%
mutate(PercGenomeZero = round(Bases/8084945*100, digits = 2)) %>%
dplyr::select(SampleID, PercGenomeZero)
View(cm_brady_ch_zero)
View(cm_brady_ch_max)
View(brady_cov4)
# Clearly, start with GCA_016616885.1 (Bradyrhizobium)
brady_cov4 <- cm_top4_table %>%
filter(GCA_016616885.1_coverM > 4) %>%
left_join(meta_AI, by = "SampleID") %>%
mutate(HalfMean = round(GCA_016616885.1_coverM/2, digits = 0),
UnderTwiceMean = round((GCA_016616885.1_coverM*2) - 1, digits = 0)) %>%
rename(MeanCoverage = GCA_016616885.1_coverM) %>%
dplyr::select(SampleID, AI, MeanCoverage, Half, UnderTwice)
# Clearly, start with GCA_016616885.1 (Bradyrhizobium)
brady_cov4 <- cm_top4_table %>%
filter(GCA_016616885.1_coverM > 4) %>%
left_join(meta_AI, by = "SampleID") %>%
mutate(HalfMean = round(GCA_016616885.1_coverM/2, digits = 0),
UnderTwiceMean = round((GCA_016616885.1_coverM*2) - 1, digits = 0)) %>%
rename(MeanCoverage = GCA_016616885.1_coverM) %>%
dplyr::select(SampleID, AI, MeanCoverage, HalfMean, UnderTwiceMean)
View(cm_brady_ch_max)
View(cm_brady_ch_cut10)
View(cm_brady_ch_cut10)
# How about setting the max at the first value that has only 10 or less bases
cm_brady_ch_cut10 <- cm_brady_ch %>%
group_by(SampleID) %>%
filter(Bases < 10) %>%
slice_head(n = 1) %>%
rename(Coverage10Bases = Coverage) %>%
dplyr::select(SampleID, Coverage10Bases)
View(cm_brady_ch_cut10)
View(cm_brady_ch_max)
# Merge all of this info
brady_info <- brady_cov4 %>%
filter(SampleID %in% unique(cm_brady_ch$SampleID)) %>%
left_join(cm_brady_ch_zero, by = "SampleID") %>%
left_join(cm_brady_ch_max, by = "SampleID") %>%
left_join(cm_brady_ch_cut10, by = "SampleID")
View(brady_info)
# Merge all of this info
brady_info <- brady_cov4 %>%
filter(SampleID %in% unique(cm_brady_ch$SampleID)) %>%
left_join(cm_brady_ch_zero, by = "SampleID") %>%
left_join(cm_brady_ch_max, by = "SampleID") %>%
left_join(cm_brady_ch_cut10, by = "SampleID") %>%
arrange(AI)
View(brady_info)
View(brady_info)
plot(brady_info$MeanCoverage, brady_info$PercGenomeZero)
# Merge all of this info
brady_info <- brady_cov4 %>%
filter(SampleID %in% unique(cm_brady_ch$SampleID)) %>%
left_join(cm_brady_ch_zero, by = "SampleID") %>%
left_join(cm_brady_ch_max, by = "SampleID") %>%
left_join(cm_brady_ch_cut10, by = "SampleID") %>%
filter(PercGenomeZero < 50) %>%
arrange(AI)
View(brady_info)
# Merge all of this info
brady_info <- brady_cov4 %>%
filter(SampleID %in% unique(cm_brady_ch$SampleID)) %>%
left_join(cm_brady_ch_zero, by = "SampleID") %>%
left_join(cm_brady_ch_max, by = "SampleID") %>%
left_join(cm_brady_ch_cut10, by = "SampleID") %>%
# filter(PercGenomeZero < 50) %>% # Use? No, filters too much of AI gradient
arrange(AI)
# Merge all of this info
brady_info <- brady_cov4 %>%
filter(SampleID %in% unique(cm_brady_ch$SampleID)) %>%
left_join(cm_brady_ch_zero, by = "SampleID") %>%
left_join(cm_brady_ch_max, by = "SampleID") %>%
left_join(cm_brady_ch_cut10, by = "SampleID") %>%
filter(PercGenomeZero < 60) %>% # Use? No, filters too much of AI gradient
arrange(AI)
View(brady_info)
ggplot(brady_info, aes(MeanCoverage, PercGenomeZero)) +
geom_point(size = 2, pch = 16, alpha = 0.8) +
geom_smooth(method = "lm") +
labs(x = "Mean Coverage (coverM)",
y = "% genome with 0 coverage") +
theme_bw()
ggplot(brady_info, aes(MeanCoverage, PercGenomeZero)) +
geom_point(size = 2, pch = 16, alpha = 0.8) +
geom_smooth(method = "lm") +
labs(x = "Mean Coverage (coverM)",
y = "% bases with 0 coverage (coverM)") +
theme_bw()
ggplot(brady_info, aes(AI, MeanCoverage)) +
geom_point(size = 2, pch = 16, alpha = 0.8) +
geom_smooth(method = "lm") +
labs(x = "Aridity index",
y = "Mean Coverage (coverM)") +
theme_bw()
ggplot(brady_info, aes(MeanCoverage, PercGenomeZero)) +
geom_point(size = 2, pch = 16, alpha = 0.8) +
geom_smooth(method = "lm") +
labs(x = "Mean Coverage (coverM)",
y = "% bases with 0 coverage (coverM)") +
theme_bw()
View(brady_info)
brady_info <- brady_cov4 %>%
filter(SampleID %in% unique(cm_brady_ch$SampleID)) %>%
left_join(cm_brady_ch_zero, by = "SampleID") %>%
left_join(cm_brady_ch_max, by = "SampleID") %>%
left_join(cm_brady_ch_cut10, by = "SampleID") %>%
#filter(PercGenomeZero < 60) %>%
arrange(AI)
View(brady_info)
# Merge all of this info
brady_info <- brady_cov4 %>%
filter(SampleID %in% unique(cm_brady_ch$SampleID)) %>%
left_join(cm_brady_ch_zero, by = "SampleID") %>%
left_join(cm_brady_ch_max, by = "SampleID") %>%
left_join(cm_brady_ch_cut10, by = "SampleID") %>%
filter(PercGenomeZero < 60) %>%
arrange(AI)
View(brady_info)
View(cm_brady_ch)
View(brady_info)
library(writexl)
write_xlsx(brady_info, "data/Bradyrhizobium_StrainFinder_Info.xlsx", format_headers = F)
